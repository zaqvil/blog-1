(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{341:function(e,t,a){"use strict";a.r(t);var n=a(18),v=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"事件模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件模型"}},[e._v("#")]),e._v(" 事件模型")]),e._v(" "),a("blockquote",[a("p",[e._v("本文为初学前端时所写，未进行勘误便移植了过来，若有错误请见谅。")])]),e._v(" "),a("p",[e._v("在讲解事件知识点之前，我想先举个例子，读者可以想想怎么优雅的实现这个功能。")]),e._v(" "),a("p",[e._v("我们经常会有这样的需求：浏览器内部有个弹窗元素，当你点击弹窗外部的元素时，这个弹窗消失。但当你点击这个弹窗本身时，不会有任何影响。")]),e._v(" "),a("p",[e._v("虽然听起来很简单，但如果不能理解事件模型的话，还是会感到很头疼的。")]),e._v(" "),a("p",[e._v("因为当你点击弹窗的时候，实际上也等于点击了外部的元素。")]),e._v(" "),a("p",[e._v("而如果只是给外部元素绑定事件来使内部元素消失， 那当你点击内部弹窗的时候，依然会触发外部元素的事件。")]),e._v(" "),a("h3",{attrs:{id:"事件传播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件传播"}},[e._v("#")]),e._v(" 事件传播")]),e._v(" "),a("p",[e._v("我们知道，网页是由一层一层的HTML代码组成。就像同心圆一般，当我们点击内部的同心圆时，实际上也是点击了外部的同心圆。")]),e._v(" "),a("p",[e._v("那么，浏览器具体是如何表现的呢？")]),e._v(" "),a("p",[e._v("这里假设我们的HTML代码结构如下")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<body>\n    <div class="outer">\n        <div class="inner"></div>\n    </div>\n</body>\n')])])]),a("p",[e._v("当我们点击inner元素的时候，其实可以看成两个部分。")]),e._v(" "),a("p",[e._v("步骤①：依次点击window -> document -> body -> outer -> inner 。这个过程从外往里，所以叫做事件捕获。")]),e._v(" "),a("p",[e._v("步骤②：依次点击inner -> outer -> body -> document -> window。这个过程从里往外，所以叫做事件冒泡。")]),e._v(" "),a("p",[e._v("因此， 从外到内，再从内到外，每个元素相当于点击了两次。")]),e._v(" "),a("p",[e._v("而同一个元素进行的两次点击也是不同的，本质区别就是这个点击事件的标志（FLAG）不同。")]),e._v(" "),a("p",[e._v("这里的标志指的就是捕获和冒泡。")]),e._v(" "),a("p",[e._v("总结而言，一个事件附加一个标志（FLAG），这个标志可以是捕获，或者是冒泡。")]),e._v(" "),a("h3",{attrs:{id:"addeventlistener-type-listener-usecapture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener-type-listener-usecapture"}},[e._v("#")]),e._v(" addEventListener(type, listener[, useCapture])")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("type")]),e._v("：事件名称，大小写敏感。")]),e._v(" "),a("li",[a("code",[e._v("listener")]),e._v("：监听函数。事件发生时，会调用该监听函数。")]),e._v(" "),a("li",[a("code",[e._v("useCapture")]),e._v("：布尔值。默认值为false")])]),e._v(" "),a("p",[e._v("这个属性大家都很熟悉， 唯一可能不熟悉的就是第三个参数了， 毕竟大多数情况下可以省略（也就是使用默认值false）。那么这第三个参数（useCapture）具体是干什么的呢？")]),e._v(" "),a("p",[e._v("我们开始说了，任何事件都会有个标志，捕获或是冒泡。")]),e._v(" "),a("p",[e._v("那么，当我们给元素监听事件的时候，除了判断事件的种类（鼠标事件，键盘事件），也会判断事件本身的标志（FLAG）。")]),e._v(" "),a("p",[e._v("而当参数useCapture设置为true的时候， 表明必须要是具有捕获标志的事件才能触发监听函数。")]),e._v(" "),a("p",[e._v("而默认值是false， 也就是当事件的标志是冒泡才能触发监听函数。")]),e._v(" "),a("h3",{attrs:{id:"e-stoppropagation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-stoppropagation"}},[e._v("#")]),e._v(" e.stopPropagation()")]),e._v(" "),a("p",[e._v("事件的传播顺序是先捕获再冒泡。而stopPropagation函数的作用是停止事件的传播。")]),e._v(" "),a("p",[e._v("这是个很强大的方法。我们可以根据这个方法实现最初的需求")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let inner = document.querySelector('.inner')\nlet outer = document.querySelector('.outer')\n\ninner.addEventListener('click', function (e) {\n    e.stopPropagation()\n}, true)\n\nouter.addEventListener('click', function (e) {\n    inner.style.display = 'none'\n}, false)\n")])])]),a("p",[e._v("解释一下")]),e._v(" "),a("p",[e._v("当我们点击inner元素的时候，其实是这样的。")]),e._v(" "),a("p",[e._v("①点击outer(捕获) -> ②点击inner(捕获) -> ③点击inner(冒泡) -> ④点击outer(冒泡)")]),e._v(" "),a("p",[e._v("那么我们只要把outer上监听的函数设置为冒泡（也就是useCapture: false）。")]),e._v(" "),a("p",[e._v("然后通过e.stopPropagation()函数来使点击inner元素的时候，事件不传播到第四步就行了。")]),e._v(" "),a("h3",{attrs:{id:"el-dispatchevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-dispatchevent"}},[e._v("#")]),e._v(" el.dispatchEvent()")]),e._v(" "),a("p",[e._v("用来直接触发事件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let e = new Event('click')\ninner.dispatchEvent(e)\n")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);